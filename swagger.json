{"swagger": "2.0", "info": {"title": "Metaroom API", "description": "API documentation for Metaroom", "version": "v1"}, "host": "78.141.207.217", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"}, "basic": {"type": "basic"}}, "security": [{"Bearer": []}, {"basic": []}], "paths": {"/api/token/": {"post": {"operationId": "api_token_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["api"]}, "parameters": []}, "/api/token/refresh/": {"post": {"operationId": "api_token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["api"]}, "parameters": []}, "/core/amenities/": {"get": {"operationId": "core_amenities_list", "description": "API endpoint for managing amenities.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Amenity"}}}}, "tags": ["core"]}, "post": {"operationId": "core_amenities_create", "description": "API endpoint for managing amenities.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Amenity"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Amenity"}}}, "tags": ["core"]}, "parameters": []}, "/core/amenities/{id}/": {"get": {"operationId": "core_amenities_read", "description": "API endpoint for managing amenities.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Amenity"}}}, "tags": ["core"]}, "put": {"operationId": "core_amenities_update", "description": "API endpoint for managing amenities.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Amenity"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Amenity"}}}, "tags": ["core"]}, "patch": {"operationId": "core_amenities_partial_update", "description": "API endpoint for managing amenities.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Amenity"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Amenity"}}}, "tags": ["core"]}, "delete": {"operationId": "core_amenities_delete", "description": "API endpoint for managing amenities.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this amenity.", "required": true, "type": "integer"}]}, "/core/bookings/": {"get": {"operationId": "core_bookings_list", "description": "API endpoint for managing bookings.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Booking"}}}}, "tags": ["core"]}, "post": {"operationId": "core_bookings_create", "description": "API endpoint for managing bookings.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Booking"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Booking"}}}, "tags": ["core"]}, "parameters": []}, "/core/bookings/{id}/": {"get": {"operationId": "core_bookings_read", "description": "API endpoint for managing bookings.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Booking"}}}, "tags": ["core"]}, "put": {"operationId": "core_bookings_update", "description": "API endpoint for managing bookings.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Booking"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Booking"}}}, "tags": ["core"]}, "patch": {"operationId": "core_bookings_partial_update", "description": "API endpoint for managing bookings.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Booking"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Booking"}}}, "tags": ["core"]}, "delete": {"operationId": "core_bookings_delete", "description": "API endpoint for managing bookings.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this booking.", "required": true, "type": "integer"}]}, "/core/filter-listings/": {"post": {"operationId": "core_filter-listings_create", "description": "Post a JSON object with filtering criteria to get filtered listings.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["core"]}, "parameters": []}, "/core/listings/": {"get": {"operationId": "core_listings_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Listing"}}}}, "tags": ["core"]}, "post": {"operationId": "core_listings_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Listing"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Listing"}}}, "tags": ["core"]}, "parameters": []}, "/core/listings/{id}/": {"get": {"operationId": "core_listings_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Listing"}}}, "tags": ["core"]}, "put": {"operationId": "core_listings_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Listing"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Listing"}}}, "tags": ["core"]}, "patch": {"operationId": "core_listings_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Listing"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Listing"}}}, "tags": ["core"]}, "delete": {"operationId": "core_listings_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this listing.", "required": true, "type": "integer"}]}, "/core/messages/": {"get": {"operationId": "core_messages_list", "description": "API endpoint for managing messages.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Message"}}}}, "tags": ["core"]}, "post": {"operationId": "core_messages_create", "description": "API endpoint for managing messages.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Message"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["core"]}, "parameters": []}, "/core/messages/{id}/": {"get": {"operationId": "core_messages_read", "description": "API endpoint for managing messages.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["core"]}, "put": {"operationId": "core_messages_update", "description": "API endpoint for managing messages.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Message"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["core"]}, "patch": {"operationId": "core_messages_partial_update", "description": "API endpoint for managing messages.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Message"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["core"]}, "delete": {"operationId": "core_messages_delete", "description": "API endpoint for managing messages.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this message.", "required": true, "type": "integer"}]}, "/core/metadata/": {"get": {"operationId": "core_metadata_list", "description": "API endpoint for managing meta data.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/MetaData"}}}}, "tags": ["core"]}, "post": {"operationId": "core_metadata_create", "description": "API endpoint for managing meta data.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MetaData"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/MetaData"}}}, "tags": ["core"]}, "parameters": []}, "/core/metadata/{id}/": {"get": {"operationId": "core_metadata_read", "description": "API endpoint for managing meta data.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MetaData"}}}, "tags": ["core"]}, "put": {"operationId": "core_metadata_update", "description": "API endpoint for managing meta data.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MetaData"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MetaData"}}}, "tags": ["core"]}, "patch": {"operationId": "core_metadata_partial_update", "description": "API endpoint for managing meta data.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/MetaData"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/MetaData"}}}, "tags": ["core"]}, "delete": {"operationId": "core_metadata_delete", "description": "API endpoint for managing meta data.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this meta data.", "required": true, "type": "integer"}]}, "/core/payments/": {"get": {"operationId": "core_payments_list", "description": "API endpoint for managing payments.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Payment"}}}}, "tags": ["core"]}, "post": {"operationId": "core_payments_create", "description": "API endpoint for managing payments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Payment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Payment"}}}, "tags": ["core"]}, "parameters": []}, "/core/payments/{id}/": {"get": {"operationId": "core_payments_read", "description": "API endpoint for managing payments.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Payment"}}}, "tags": ["core"]}, "put": {"operationId": "core_payments_update", "description": "API endpoint for managing payments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Payment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Payment"}}}, "tags": ["core"]}, "patch": {"operationId": "core_payments_partial_update", "description": "API endpoint for managing payments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Payment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Payment"}}}, "tags": ["core"]}, "delete": {"operationId": "core_payments_delete", "description": "API endpoint for managing payments.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this payment.", "required": true, "type": "integer"}]}, "/core/reviews/": {"get": {"operationId": "core_reviews_list", "description": "API endpoint for managing reviews.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Review"}}}}, "tags": ["core"]}, "post": {"operationId": "core_reviews_create", "description": "API endpoint for managing reviews.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Review"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Review"}}}, "tags": ["core"]}, "parameters": []}, "/core/reviews/{id}/": {"get": {"operationId": "core_reviews_read", "description": "API endpoint for managing reviews.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Review"}}}, "tags": ["core"]}, "put": {"operationId": "core_reviews_update", "description": "API endpoint for managing reviews.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Review"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Review"}}}, "tags": ["core"]}, "patch": {"operationId": "core_reviews_partial_update", "description": "API endpoint for managing reviews.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Review"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Review"}}}, "tags": ["core"]}, "delete": {"operationId": "core_reviews_delete", "description": "API endpoint for managing reviews.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this review.", "required": true, "type": "integer"}]}, "/core/spaces/": {"get": {"operationId": "core_spaces_list", "description": "API endpoint for managing spaces.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Space"}}}}, "tags": ["core"]}, "post": {"operationId": "core_spaces_create", "description": "API endpoint for managing spaces.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["core"]}, "parameters": []}, "/core/spaces/{id}/": {"get": {"operationId": "core_spaces_read", "description": "API endpoint for managing spaces.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["core"]}, "put": {"operationId": "core_spaces_update", "description": "API endpoint for managing spaces.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["core"]}, "patch": {"operationId": "core_spaces_partial_update", "description": "API endpoint for managing spaces.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["core"]}, "delete": {"operationId": "core_spaces_delete", "description": "API endpoint for managing spaces.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this space.", "required": true, "type": "integer"}]}, "/core/users/": {"get": {"operationId": "core_users_list", "description": "API endpoint for managing users.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/CustomUser"}}}}, "tags": ["core"]}, "post": {"operationId": "core_users_create", "description": "API endpoint for managing users.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CustomUser"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CustomUser"}}}, "tags": ["core"]}, "parameters": []}, "/core/users/{id}/": {"get": {"operationId": "core_users_read", "description": "API endpoint for managing users.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CustomUser"}}}, "tags": ["core"]}, "put": {"operationId": "core_users_update", "description": "API endpoint for managing users.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CustomUser"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CustomUser"}}}, "tags": ["core"]}, "patch": {"operationId": "core_users_partial_update", "description": "API endpoint for managing users.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CustomUser"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CustomUser"}}}, "tags": ["core"]}, "delete": {"operationId": "core_users_delete", "description": "API endpoint for managing users.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}, "/core/wishlists/": {"get": {"operationId": "core_wishlists_list", "description": "API endpoint for managing wishlists.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Wishlist"}}}}, "tags": ["core"]}, "post": {"operationId": "core_wishlists_create", "description": "API endpoint for managing wishlists.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Wishlist"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Wishlist"}}}, "tags": ["core"]}, "parameters": []}, "/core/wishlists/{id}/": {"get": {"operationId": "core_wishlists_read", "description": "API endpoint for managing wishlists.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Wishlist"}}}, "tags": ["core"]}, "put": {"operationId": "core_wishlists_update", "description": "API endpoint for managing wishlists.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Wishlist"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Wishlist"}}}, "tags": ["core"]}, "patch": {"operationId": "core_wishlists_partial_update", "description": "API endpoint for managing wishlists.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Wishlist"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Wishlist"}}}, "tags": ["core"]}, "delete": {"operationId": "core_wishlists_delete", "description": "API endpoint for managing wishlists.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this wishlist.", "required": true, "type": "integer"}]}}, "definitions": {"TokenObtainPair": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "Amenity": {"type": "object", "properties": {"wifi": {"title": "Wifi", "type": "boolean"}, "parking": {"title": "Parking", "type": "boolean"}, "pool": {"title": "Pool", "type": "boolean"}, "fitness_center": {"title": "Fitness center", "type": "boolean"}, "pet_friendly": {"title": "Pet friendly", "type": "boolean"}, "tv": {"title": "Tv", "type": "boolean"}, "kitchen": {"title": "Kitchen", "type": "boolean"}, "smoking_allowed": {"title": "Smoking allowed", "type": "boolean"}, "party_allowed": {"title": "Party allowed", "type": "boolean"}, "security_cameras": {"title": "Security cameras", "type": "boolean"}}}, "Booking": {"required": ["guest", "listing", "check_in_date", "check_out_date", "total_cost", "booking_status", "special_requests"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "guest": {"title": "Guest", "type": "integer"}, "listing": {"title": "Listing", "type": "integer"}, "check_in_date": {"title": "Check in date", "type": "string", "format": "date"}, "check_out_date": {"title": "Check out date", "type": "string", "format": "date"}, "total_cost": {"title": "Total cost", "type": "string", "format": "decimal"}, "booking_status": {"title": "Booking status", "type": "string", "maxLength": 20, "minLength": 1}, "special_requests": {"title": "Special requests", "type": "string", "minLength": 1}}}, "HouseRules": {"required": ["check_in_time", "check_out_time", "quiet_time"], "type": "object", "properties": {"check_in_time": {"title": "Check in time", "type": "string", "maxLength": 10, "minLength": 1}, "check_out_time": {"title": "Check out time", "type": "string", "maxLength": 10, "minLength": 1}, "self_check_in": {"title": "Self check in", "type": "boolean"}, "max_guests": {"title": "Max guests", "type": "integer", "maximum": 2147483647, "minimum": 0}, "quiet_time": {"title": "Quiet time", "type": "string", "maxLength": 10, "minLength": 1}}}, "HealthSafety": {"type": "object", "properties": {"smoke_detectors_installed": {"title": "Smoke detectors installed", "type": "boolean"}, "first_aid_kit_available": {"title": "First aid kit available", "type": "boolean"}, "fire_extinguisher_provided": {"title": "Fire extinguisher provided", "type": "boolean"}, "emergency_contact_provided": {"title": "Emergency contact provided", "type": "boolean"}, "regular_cleaning_protocols": {"title": "Regular cleaning protocols", "type": "boolean"}}}, "Accessibility": {"type": "object", "properties": {"accessible_entrance": {"title": "Accessible entrance", "type": "boolean"}, "elevator": {"title": "Elevator", "type": "boolean"}, "accessible_parking": {"title": "Accessible parking", "type": "boolean"}, "ramp": {"title": "Ramp", "type": "boolean"}}}, "Space": {"type": "object", "properties": {"guests_capacity": {"title": "Guests capacity", "type": "integer", "maximum": 2147483647, "minimum": 0}, "bathrooms": {"title": "Bathrooms", "type": "integer", "maximum": 2147483647, "minimum": 0}, "bedrooms": {"title": "Bedrooms", "type": "integer", "maximum": 2147483647, "minimum": 0}, "double_beds": {"title": "Double beds", "type": "integer", "maximum": 2147483647, "minimum": 0}, "single_beds": {"title": "Single beds", "type": "integer", "maximum": 2147483647, "minimum": 0}}}, "MetaData": {"required": ["title", "description", "property_type", "country", "city", "street", "zip"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "minLength": 1}, "property_type": {"title": "Property type", "type": "string", "maxLength": 50, "minLength": 1}, "latitude": {"title": "Latitude", "type": "number"}, "longitude": {"title": "Longitude", "type": "number"}, "country": {"title": "Country", "type": "string", "maxLength": 100, "minLength": 1}, "city": {"title": "City", "type": "string", "maxLength": 100, "minLength": 1}, "street": {"title": "Street", "type": "string", "maxLength": 100, "minLength": 1}, "zip": {"title": "Zip", "type": "string", "maxLength": 20, "minLength": 1}}}, "Listing": {"required": ["host", "price_per_night", "amenities", "house_rules", "health_safety", "accessibility", "space", "meta"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "host": {"title": "Host", "type": "integer"}, "price_per_night": {"title": "Price per night", "type": "string", "format": "decimal"}, "free_cancellation": {"title": "Free cancellation", "type": "boolean"}, "images": {"type": "array", "items": {"title": "Images", "type": "string", "format": "uri", "maxLength": 200, "minLength": 1}}, "reserved_dates": {"type": "array", "items": {"title": "Reserved dates", "type": "string", "format": "date"}}, "boost_dates": {"type": "array", "items": {"title": "Boost dates", "type": "string", "format": "date"}}, "amenities": {"$ref": "#/definitions/Amenity"}, "house_rules": {"$ref": "#/definitions/HouseRules"}, "health_safety": {"$ref": "#/definitions/HealthSafety"}, "accessibility": {"$ref": "#/definitions/Accessibility"}, "space": {"$ref": "#/definitions/Space"}, "meta": {"$ref": "#/definitions/MetaData"}}}, "Message": {"required": ["sender", "receiver", "listing", "message_text"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "sender": {"title": "Sender", "type": "integer"}, "receiver": {"title": "Receiver", "type": "integer"}, "listing": {"title": "Listing", "type": "integer"}, "message_text": {"title": "Message text", "type": "string", "minLength": 1}, "timestamp": {"title": "Timestamp", "type": "string", "format": "date-time", "readOnly": true}, "read_status": {"title": "Read status", "type": "boolean"}}}, "Payment": {"required": ["booking", "user", "payment_amount", "payment_status"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "booking": {"title": "Booking", "type": "integer"}, "user": {"title": "User", "type": "integer"}, "payment_date": {"title": "Payment date", "type": "string", "format": "date-time", "readOnly": true}, "payment_amount": {"title": "Payment amount", "type": "string", "format": "decimal"}, "payment_status": {"title": "Payment status", "type": "string", "maxLength": 20, "minLength": 1}}}, "Review": {"required": ["guest", "listing", "rating", "review_text"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "guest": {"title": "Guest", "type": "integer"}, "listing": {"title": "Listing", "type": "integer"}, "rating": {"title": "Rating", "type": "integer", "maximum": 2147483647, "minimum": 0}, "review_text": {"title": "Review text", "type": "string", "minLength": 1}, "date": {"title": "Date", "type": "string", "format": "date-time", "readOnly": true}}}, "CustomUser": {"required": ["password", "username"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "password": {"title": "Password", "type": "string", "maxLength": 128, "minLength": 1}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "x-nullable": true}, "is_superuser": {"title": "Superuser status", "description": "Designates that this user has all permissions without explicitly assigning them.", "type": "boolean"}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}, "is_staff": {"title": "Staff status", "description": "Designates whether the user can log into this admin site.", "type": "boolean"}, "is_active": {"title": "Active", "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.", "type": "boolean"}, "date_joined": {"title": "Date joined", "type": "string", "format": "date-time"}, "profile_picture": {"title": "Profile picture", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "date_of_birth": {"title": "Date of birth", "type": "string", "format": "date", "x-nullable": true}, "address": {"type": "array", "items": {"title": "Address", "type": "string", "maxLength": 255}}, "social_data": {"title": "Social data", "type": "object", "x-nullable": true}, "external_ids": {"title": "External ids", "type": "object", "x-nullable": true}, "groups": {"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.", "type": "array", "items": {"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.", "type": "integer"}, "uniqueItems": true}, "user_permissions": {"description": "Specific permissions for this user.", "type": "array", "items": {"description": "Specific permissions for this user.", "type": "integer"}, "uniqueItems": true}}}, "Wishlist": {"required": ["user", "listing"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "integer"}, "listing": {"title": "Listing", "type": "integer"}}}}}