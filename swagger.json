{"swagger": "2.0", "info": {"title": "Metaroom API", "description": "API documentation for Metaroom", "version": "v2"}, "host": "78.141.207.217", "schemes": ["http"], "basePath": "/api/v2", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"type": "apiKey", "name": "Authorization", "in": "header", "description": "Enter 'Bearer' followed by a space and then your token. Example: \"Bearer YOUR_TOKEN\""}, "basic": {"type": "basic"}}, "security": [{"Bearer": []}, {"basic": []}], "paths": {"/accessibility/": {"get": {"operationId": "accessibility_list", "description": "API endpoint for managing accessibility.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Accessibility"}}}}, "tags": ["accessibility"]}, "post": {"operationId": "accessibility_create", "description": "API endpoint for managing accessibility.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Accessibility"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Accessibility"}}}, "tags": ["accessibility"]}, "parameters": []}, "/accessibility/{id}/": {"get": {"operationId": "accessibility_read", "description": "API endpoint for managing accessibility.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Accessibility"}}}, "tags": ["accessibility"]}, "put": {"operationId": "accessibility_update", "description": "API endpoint for managing accessibility.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Accessibility"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Accessibility"}}}, "tags": ["accessibility"]}, "patch": {"operationId": "accessibility_partial_update", "description": "API endpoint for managing accessibility.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Accessibility"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Accessibility"}}}, "tags": ["accessibility"]}, "delete": {"operationId": "accessibility_delete", "description": "API endpoint for managing accessibility.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["accessibility"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Accessibility.", "required": true, "type": "integer"}]}, "/amenities/": {"get": {"operationId": "amenities_list", "description": "API endpoint for managing amenities.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Amenity"}}}}, "tags": ["amenities"]}, "post": {"operationId": "amenities_create", "description": "API endpoint for managing amenities.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Amenity"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Amenity"}}}, "tags": ["amenities"]}, "parameters": []}, "/amenities/{id}/": {"get": {"operationId": "amenities_read", "description": "API endpoint for managing amenities.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Amenity"}}}, "tags": ["amenities"]}, "put": {"operationId": "amenities_update", "description": "API endpoint for managing amenities.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Amenity"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Amenity"}}}, "tags": ["amenities"]}, "patch": {"operationId": "amenities_partial_update", "description": "API endpoint for managing amenities.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Amenity"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Amenity"}}}, "tags": ["amenities"]}, "delete": {"operationId": "amenities_delete", "description": "API endpoint for managing amenities.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["amenities"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Amenity.", "required": true, "type": "integer"}]}, "/api/login/": {"post": {"operationId": "api_login_create", "description": "Log in using Clerk ID", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["clerk_id"], "type": "object", "properties": {"clerk_id": {"description": "Clerk user ID", "type": "string"}}}}], "responses": {"200": {"description": "Successful Login", "schema": {"type": "object", "properties": {"user": {"description": "User details", "type": "object"}, "refresh": {"description": "Refresh token", "type": "string"}, "access": {"description": "Access token", "type": "string"}}}}, "404": {"description": "No such user"}}, "tags": ["api"]}, "parameters": []}, "/api/signup/": {"post": {"operationId": "api_signup_create", "description": "Sign up using Clerk ID and email", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["clerk_id", "email"], "type": "object", "properties": {"clerk_id": {"description": "Clerk user ID", "type": "string"}, "email": {"description": "User email address", "type": "string"}}}}], "responses": {"201": {"description": "Successful Sign Up", "examples": {"application/json": {"refresh": "refresh_token_string", "access": "access_token_string"}}}, "200": {"description": "User already exists, logged in instead"}}, "tags": ["api"]}, "parameters": []}, "/api/token/": {"post": {"operationId": "api_token_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["api"]}, "parameters": []}, "/api/token/refresh/": {"post": {"operationId": "api_token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["api"]}, "parameters": []}, "/availabilities/": {"get": {"operationId": "availabilities_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Availabilities"}}}}, "tags": ["availabilities"]}, "post": {"operationId": "availabilities_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Availabilities"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Availabilities"}}}, "tags": ["availabilities"]}, "parameters": []}, "/availabilities/{id}/": {"get": {"operationId": "availabilities_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Availabilities"}}}, "tags": ["availabilities"]}, "put": {"operationId": "availabilities_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Availabilities"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Availabilities"}}}, "tags": ["availabilities"]}, "patch": {"operationId": "availabilities_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Availabilities"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Availabilities"}}}, "tags": ["availabilities"]}, "delete": {"operationId": "availabilities_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["availabilities"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Availability.", "required": true, "type": "integer"}]}, "/bookings/": {"get": {"operationId": "bookings_list", "description": "API endpoint for managing bookings.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Booking"}}}}, "tags": ["bookings"]}, "post": {"operationId": "bookings_create", "description": "API endpoint for managing bookings.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Booking"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Booking"}}}, "tags": ["bookings"]}, "parameters": []}, "/bookings/{id}/": {"get": {"operationId": "bookings_read", "description": "API endpoint for managing bookings.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Booking"}}}, "tags": ["bookings"]}, "put": {"operationId": "bookings_update", "description": "API endpoint for managing bookings.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Booking"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Booking"}}}, "tags": ["bookings"]}, "patch": {"operationId": "bookings_partial_update", "description": "API endpoint for managing bookings.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Booking"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Booking"}}}, "tags": ["bookings"]}, "delete": {"operationId": "bookings_delete", "description": "API endpoint for managing bookings.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["bookings"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Booking.", "required": true, "type": "string", "format": "uuid"}]}, "/core/check-payment/{payment_intent_id}/": {"get": {"operationId": "core_check-payment_read", "description": "Check the status of a Stripe payment intent", "parameters": [{"name": "payment_intent_id", "in": "path", "description": "Stripe Payment Intent ID", "type": "string", "required": true}], "responses": {"200": {"description": ""}}, "tags": ["core"]}, "parameters": [{"name": "payment_intent_id", "in": "path", "required": true, "type": "string"}]}, "/core/user/quick-create": {"post": {"operationId": "core_user_quick-create_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["core"]}, "parameters": []}, "/create-payment/": {"post": {"operationId": "create-payment_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["amount", "booking_id"], "type": "object", "properties": {"amount": {"type": "integer"}, "currency": {"type": "string", "default": "usd"}, "booking_id": {"description": "ID of the booking", "type": "integer"}}}}], "responses": {"200": {"description": "", "schema": {"type": "object", "properties": {"client_secret": {"type": "string"}, "payment_intent_id": {"type": "string"}}}}, "400": {"description": "Bad Request"}, "500": {"description": "Internal Server Error"}}, "tags": ["create-payment"]}, "parameters": []}, "/dietary-options/": {"get": {"operationId": "dietary-options_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/DietaryOptions"}}}}, "tags": ["dietary-options"]}, "post": {"operationId": "dietary-options_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DietaryOptions"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/DietaryOptions"}}}, "tags": ["dietary-options"]}, "parameters": []}, "/dietary-options/{id}/": {"get": {"operationId": "dietary-options_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DietaryOptions"}}}, "tags": ["dietary-options"]}, "put": {"operationId": "dietary-options_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DietaryOptions"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DietaryOptions"}}}, "tags": ["dietary-options"]}, "patch": {"operationId": "dietary-options_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/DietaryOptions"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/DietaryOptions"}}}, "tags": ["dietary-options"]}, "delete": {"operationId": "dietary-options_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["dietary-options"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Dietary Option.", "required": true, "type": "integer"}]}, "/filter-listings/": {"get": {"operationId": "filter-listings_list", "description": "", "parameters": [{"name": "amenities_wifi", "in": "query", "description": "Filter by amenities wifi", "type": "boolean"}, {"name": "amenities_fast_wifi", "in": "query", "description": "Filter by amenities fast wifi", "type": "boolean"}, {"name": "amenities_parking", "in": "query", "description": "Filter by amenities parking", "type": "boolean"}, {"name": "amenities_pool", "in": "query", "description": "Filter by amenities pool", "type": "boolean"}, {"name": "amenities_fitness_center", "in": "query", "description": "Filter by amenities fitness center", "type": "boolean"}, {"name": "amenities_pet_friendly", "in": "query", "description": "Filter by amenities pet friendly", "type": "boolean"}, {"name": "amenities_tv", "in": "query", "description": "Filter by amenities tv", "type": "boolean"}, {"name": "amenities_kitchen", "in": "query", "description": "Filter by amenities kitchen", "type": "boolean"}, {"name": "amenities_smoking_allowed", "in": "query", "description": "Filter by amenities smoking allowed", "type": "boolean"}, {"name": "amenities_party_allowed", "in": "query", "description": "Filter by amenities party allowed", "type": "boolean"}, {"name": "amenities_security_cameras", "in": "query", "description": "Filter by amenities security cameras", "type": "boolean"}, {"name": "space_guests_capacity", "in": "query", "description": "Filter by space guests capacity", "type": "integer"}, {"name": "space_bathrooms", "in": "query", "description": "Filter by space bathrooms", "type": "integer"}, {"name": "space_bedrooms", "in": "query", "description": "Filter by space bedrooms", "type": "integer"}, {"name": "space_double_beds", "in": "query", "description": "Filter by space double beds", "type": "integer"}, {"name": "space_single_beds", "in": "query", "description": "Filter by space single beds", "type": "integer"}, {"name": "location_country", "in": "query", "description": "Filter by location country", "type": "string"}, {"name": "location_city", "in": "query", "description": "Filter by location city", "type": "string"}, {"name": "house_rules_check_in_time", "in": "query", "description": "Filter by house rules check in time", "type": "string"}, {"name": "house_rules_check_out_time", "in": "query", "description": "Filter by house rules check out time", "type": "string"}, {"name": "house_rules_self_check_in", "in": "query", "description": "Filter by house rules self check in", "type": "boolean"}, {"name": "house_rules_max_guests", "in": "query", "description": "Filter by house rules max guests", "type": "integer"}, {"name": "house_rules_quiet_time", "in": "query", "description": "Filter by house rules quiet time", "type": "string"}, {"name": "house_rules_cancellation_policy", "in": "query", "description": "Filter by house rules cancellation policy", "type": "string"}, {"name": "house_rules_alcohol_policy", "in": "query", "description": "Filter by house rules alcohol policy", "type": "string"}, {"name": "house_rules_drug_policy", "in": "query", "description": "Filter by house rules drug policy", "type": "string"}, {"name": "house_rules_pet_policy", "in": "query", "description": "Filter by house rules pet policy", "type": "string"}, {"name": "health_safety_smoke_detectors_installed", "in": "query", "description": "Filter by health safety smoke detectors installed", "type": "boolean"}, {"name": "health_safety_first_aid_kit_available", "in": "query", "description": "Filter by health safety first aid kit available", "type": "boolean"}, {"name": "health_safety_fire_extinguisher_provided", "in": "query", "description": "Filter by health safety fire extinguisher provided", "type": "boolean"}, {"name": "health_safety_emergency_contact_provided", "in": "query", "description": "Filter by health safety emergency contact provided", "type": "boolean"}, {"name": "health_safety_regular_cleaning_protocols", "in": "query", "description": "Filter by health safety regular cleaning protocols", "type": "boolean"}, {"name": "health_safety_covid_19_precautions", "in": "query", "description": "Filter by health safety covid 19 precautions", "type": "boolean"}, {"name": "accessibility_accessible_entrance", "in": "query", "description": "Filter by accessibility accessible entrance", "type": "boolean"}, {"name": "accessibility_elevator", "in": "query", "description": "Filter by accessibility elevator", "type": "boolean"}, {"name": "accessibility_accessible_parking", "in": "query", "description": "Filter by accessibility accessible parking", "type": "boolean"}, {"name": "accessibility_ramp", "in": "query", "description": "Filter by accessibility ramp", "type": "boolean"}, {"name": "accessibility_visual_aid", "in": "query", "description": "Filter by accessibility visual aid", "type": "boolean"}, {"name": "accessibility_communication_accessibility", "in": "query", "description": "Filter by accessibility communication accessibility", "type": "boolean"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Listing"}}}}, "tags": ["filter-listings"]}, "parameters": []}, "/get_all/availabilities/{listing_id}/": {"get": {"operationId": "get_all_availabilities_read", "description": "Retrieve all availabilities.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Availabilities"}}}}, "tags": ["get_all"]}, "parameters": [{"name": "listing_id", "in": "path", "required": true, "type": "string"}]}, "/get_all/bookings/{listing_id}/": {"get": {"operationId": "get_all_bookings_read", "description": "Retrieve all bookings.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Booking"}}}}, "tags": ["get_all"]}, "parameters": [{"name": "listing_id", "in": "path", "required": true, "type": "string"}]}, "/get_all/images/{listing_id}/": {"get": {"operationId": "get_all_images_read", "description": "Retrieve all images.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Image"}}}}, "tags": ["get_all"]}, "parameters": [{"name": "listing_id", "in": "path", "required": true, "type": "string"}]}, "/health-safety/": {"get": {"operationId": "health-safety_list", "description": "API endpoint for managing healthSafety.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/HealthSafety"}}}}, "tags": ["health-safety"]}, "post": {"operationId": "health-safety_create", "description": "API endpoint for managing healthSafety.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthSafety"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HealthSafety"}}}, "tags": ["health-safety"]}, "parameters": []}, "/health-safety/{id}/": {"get": {"operationId": "health-safety_read", "description": "API endpoint for managing healthSafety.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthSafety"}}}, "tags": ["health-safety"]}, "put": {"operationId": "health-safety_update", "description": "API endpoint for managing healthSafety.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthSafety"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthSafety"}}}, "tags": ["health-safety"]}, "patch": {"operationId": "health-safety_partial_update", "description": "API endpoint for managing healthSafety.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HealthSafety"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HealthSafety"}}}, "tags": ["health-safety"]}, "delete": {"operationId": "health-safety_delete", "description": "API endpoint for managing healthSafety.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["health-safety"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Health and Safety.", "required": true, "type": "integer"}]}, "/house-rules/": {"get": {"operationId": "house-rules_list", "description": "API endpoint for managing houseRules.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/HouseRules"}}}}, "tags": ["house-rules"]}, "post": {"operationId": "house-rules_create", "description": "API endpoint for managing houseRules.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HouseRules"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/HouseRules"}}}, "tags": ["house-rules"]}, "parameters": []}, "/house-rules/{id}/": {"get": {"operationId": "house-rules_read", "description": "API endpoint for managing houseRules.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HouseRules"}}}, "tags": ["house-rules"]}, "put": {"operationId": "house-rules_update", "description": "API endpoint for managing houseRules.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HouseRules"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HouseRules"}}}, "tags": ["house-rules"]}, "patch": {"operationId": "house-rules_partial_update", "description": "API endpoint for managing houseRules.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/HouseRules"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/HouseRules"}}}, "tags": ["house-rules"]}, "delete": {"operationId": "house-rules_delete", "description": "API endpoint for managing houseRules.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["house-rules"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this House Rule.", "required": true, "type": "integer"}]}, "/listings/": {"get": {"operationId": "listings_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Listing"}}}}, "tags": ["listings"]}, "post": {"operationId": "listings_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ListingCreateUpdate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ListingCreateUpdate"}}}, "tags": ["listings"]}, "parameters": []}, "/listings/{id}/": {"get": {"operationId": "listings_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Listing"}}}, "tags": ["listings"]}, "put": {"operationId": "listings_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ListingCreateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ListingCreateUpdate"}}}, "tags": ["listings"]}, "patch": {"operationId": "listings_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Listing"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Listing"}}}, "tags": ["listings"]}, "delete": {"operationId": "listings_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["listings"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Listing.", "required": true, "type": "integer"}]}, "/locations/": {"get": {"operationId": "locations_list", "description": "API endpoint for managing location.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Location"}}}}, "tags": ["locations"]}, "post": {"operationId": "locations_create", "description": "API endpoint for managing location.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Location"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Location"}}}, "tags": ["locations"]}, "parameters": []}, "/locations/{id}/": {"get": {"operationId": "locations_read", "description": "API endpoint for managing location.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Location"}}}, "tags": ["locations"]}, "put": {"operationId": "locations_update", "description": "API endpoint for managing location.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Location"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Location"}}}, "tags": ["locations"]}, "patch": {"operationId": "locations_partial_update", "description": "API endpoint for managing location.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Location"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Location"}}}, "tags": ["locations"]}, "delete": {"operationId": "locations_delete", "description": "API endpoint for managing location.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["locations"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Location.", "required": true, "type": "integer"}]}, "/messages/": {"get": {"operationId": "messages_list", "description": "API endpoint for managing messages.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Message"}}}}, "tags": ["messages"]}, "post": {"operationId": "messages_create", "description": "API endpoint for managing messages.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Message"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["messages"]}, "parameters": []}, "/messages/{id}/": {"get": {"operationId": "messages_read", "description": "API endpoint for managing messages.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["messages"]}, "put": {"operationId": "messages_update", "description": "API endpoint for managing messages.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Message"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["messages"]}, "patch": {"operationId": "messages_partial_update", "description": "API endpoint for managing messages.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Message"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Message"}}}, "tags": ["messages"]}, "delete": {"operationId": "messages_delete", "description": "API endpoint for managing messages.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["messages"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Message.", "required": true, "type": "integer"}]}, "/payments/": {"get": {"operationId": "payments_list", "description": "API endpoint for managing payments.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Payment"}}}}, "tags": ["payments"]}, "post": {"operationId": "payments_create", "description": "API endpoint for managing payments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Payment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Payment"}}}, "tags": ["payments"]}, "parameters": []}, "/payments/{id}/": {"get": {"operationId": "payments_read", "description": "API endpoint for managing payments.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Payment"}}}, "tags": ["payments"]}, "put": {"operationId": "payments_update", "description": "API endpoint for managing payments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Payment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Payment"}}}, "tags": ["payments"]}, "patch": {"operationId": "payments_partial_update", "description": "API endpoint for managing payments.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Payment"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Payment"}}}, "tags": ["payments"]}, "delete": {"operationId": "payments_delete", "description": "API endpoint for managing payments.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["payments"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Payment.", "required": true, "type": "string", "format": "uuid"}]}, "/retreats/": {"get": {"operationId": "retreats_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Retreat"}}}}, "tags": ["retreats"]}, "post": {"operationId": "retreats_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Retreat"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Retreat"}}}, "tags": ["retreats"]}, "parameters": []}, "/retreats/{id}/": {"get": {"operationId": "retreats_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Retreat"}}}, "tags": ["retreats"]}, "put": {"operationId": "retreats_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Retreat"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Retreat"}}}, "tags": ["retreats"]}, "patch": {"operationId": "retreats_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Retreat"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Retreat"}}}, "tags": ["retreats"]}, "delete": {"operationId": "retreats_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["retreats"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Retreat.", "required": true, "type": "integer"}]}, "/schedule-items/": {"get": {"operationId": "schedule-items_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/ScheduleItem"}}}}, "tags": ["schedule-items"]}, "post": {"operationId": "schedule-items_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ScheduleItem"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ScheduleItem"}}}, "tags": ["schedule-items"]}, "parameters": []}, "/schedule-items/{id}/": {"get": {"operationId": "schedule-items_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ScheduleItem"}}}, "tags": ["schedule-items"]}, "put": {"operationId": "schedule-items_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ScheduleItem"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ScheduleItem"}}}, "tags": ["schedule-items"]}, "patch": {"operationId": "schedule-items_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ScheduleItem"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ScheduleItem"}}}, "tags": ["schedule-items"]}, "delete": {"operationId": "schedule-items_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["schedule-items"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Schedule Item.", "required": true, "type": "string", "format": "uuid"}]}, "/spaces/": {"get": {"operationId": "spaces_list", "description": "API endpoint for managing spaces.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Space"}}}}, "tags": ["spaces"]}, "post": {"operationId": "spaces_create", "description": "API endpoint for managing spaces.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["spaces"]}, "parameters": []}, "/spaces/{id}/": {"get": {"operationId": "spaces_read", "description": "API endpoint for managing spaces.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["spaces"]}, "put": {"operationId": "spaces_update", "description": "API endpoint for managing spaces.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["spaces"]}, "patch": {"operationId": "spaces_partial_update", "description": "API endpoint for managing spaces.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Space"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Space"}}}, "tags": ["spaces"]}, "delete": {"operationId": "spaces_delete", "description": "API endpoint for managing spaces.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["spaces"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Space.", "required": true, "type": "integer"}]}, "/tourist-activities/": {"get": {"operationId": "tourist-activities_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/TouristActivities"}}}}, "tags": ["tourist-activities"]}, "post": {"operationId": "tourist-activities_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TouristActivities"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TouristActivities"}}}, "tags": ["tourist-activities"]}, "parameters": []}, "/tourist-activities/{id}/": {"get": {"operationId": "tourist-activities_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TouristActivities"}}}, "tags": ["tourist-activities"]}, "put": {"operationId": "tourist-activities_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TouristActivities"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TouristActivities"}}}, "tags": ["tourist-activities"]}, "patch": {"operationId": "tourist-activities_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TouristActivities"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TouristActivities"}}}, "tags": ["tourist-activities"]}, "delete": {"operationId": "tourist-activities_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["tourist-activities"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Tourist Activity.", "required": true, "type": "integer"}]}, "/upload-image/": {"post": {"operationId": "upload-image_create", "description": "Upload an image", "parameters": [{"name": "listing_id", "in": "query", "description": "ID of the listing to which the image belongs", "required": true, "type": "string"}, {"name": "image", "in": "formData", "description": "Image file to upload", "required": true, "type": "file"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Image"}}}, "consumes": ["multipart/form-data", "application/x-www-form-urlencoded"], "tags": ["upload-image"]}, "parameters": []}, "/users/": {"get": {"operationId": "users_list", "description": "API endpoint for managing users.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/CustomUser"}}}}, "tags": ["users"]}, "post": {"operationId": "users_create", "description": "API endpoint for managing users.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CustomUser"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/CustomUser"}}}, "tags": ["users"]}, "parameters": []}, "/users/{id}/": {"get": {"operationId": "users_read", "description": "API endpoint for managing users.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CustomUser"}}}, "tags": ["users"]}, "put": {"operationId": "users_update", "description": "API endpoint for managing users.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CustomUser"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CustomUser"}}}, "tags": ["users"]}, "patch": {"operationId": "users_partial_update", "description": "API endpoint for managing users.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CustomUser"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CustomUser"}}}, "tags": ["users"]}, "delete": {"operationId": "users_delete", "description": "API endpoint for managing users.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["users"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this user.", "required": true, "type": "integer"}]}, "/wishlists/": {"get": {"operationId": "wishlists_list", "description": "API endpoint for managing wishlists.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Wishlist"}}}}, "tags": ["wishlists"]}, "post": {"operationId": "wishlists_create", "description": "API endpoint for managing wishlists.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Wishlist"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Wishlist"}}}, "tags": ["wishlists"]}, "parameters": []}, "/wishlists/{id}/": {"get": {"operationId": "wishlists_read", "description": "API endpoint for managing wishlists.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Wishlist"}}}, "tags": ["wishlists"]}, "put": {"operationId": "wishlists_update", "description": "API endpoint for managing wishlists.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Wishlist"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Wishlist"}}}, "tags": ["wishlists"]}, "patch": {"operationId": "wishlists_partial_update", "description": "API endpoint for managing wishlists.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Wishlist"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Wishlist"}}}, "tags": ["wishlists"]}, "delete": {"operationId": "wishlists_delete", "description": "API endpoint for managing wishlists.", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["wishlists"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Wishlist.", "required": true, "type": "integer"}]}, "/workshops/": {"get": {"operationId": "workshops_list", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Workshop"}}}}, "tags": ["workshops"]}, "post": {"operationId": "workshops_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Workshop"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Workshop"}}}, "tags": ["workshops"]}, "parameters": []}, "/workshops/{id}/": {"get": {"operationId": "workshops_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Workshop"}}}, "tags": ["workshops"]}, "put": {"operationId": "workshops_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Workshop"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Workshop"}}}, "tags": ["workshops"]}, "patch": {"operationId": "workshops_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Workshop"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Workshop"}}}, "tags": ["workshops"]}, "delete": {"operationId": "workshops_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["workshops"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this Workshop.", "required": true, "type": "integer"}]}}, "definitions": {"Accessibility": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "accessible_entrance": {"title": "Accessible entrance", "description": "Indicates if the property has an accessible entrance.", "type": "boolean"}, "elevator": {"title": "Elevator", "description": "Indicates if the property is equipped with an elevator.", "type": "boolean"}, "accessible_parking": {"title": "Accessible parking", "description": "Indicates if the property offers accessible parking spaces.", "type": "boolean"}, "ramp": {"title": "Ramp", "description": "Indicates if the property has a ramp for wheelchair access.", "type": "boolean"}, "visual_aid": {"title": "Visual aid", "description": "Indicates if visual aids like Braille are available at the property.", "type": "boolean"}, "communication_accessibility": {"title": "Communication accessibility", "description": "Indicates if communication aids like sign language interpreters or accessible formats are available.", "type": "boolean"}}}, "Amenity": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "wifi": {"title": "Wifi", "description": "Whether the property has WiFi.", "type": "boolean"}, "fast_wifi": {"title": "Fast wifi", "description": "Whether fast WiFi is available.", "type": "boolean"}, "parking": {"title": "Parking", "description": "Whether the property has parking available.", "type": "boolean"}, "pool": {"title": "Pool", "description": "Whether the property has a pool.", "type": "boolean"}, "fitness_center": {"title": "Fitness center", "description": "Whether the property has a fitness center.", "type": "boolean"}, "pet_friendly": {"title": "Pet friendly", "description": "Whether the property is pet-friendly.", "type": "boolean"}, "tv": {"title": "Tv", "description": "Whether the property has TV available.", "type": "boolean"}, "kitchen": {"title": "Kitchen", "description": "Whether the property has a kitchen.", "type": "boolean"}, "smoking_allowed": {"title": "Smoking allowed", "description": "Whether smoking is allowed in the property.", "type": "boolean"}, "party_allowed": {"title": "Party allowed", "description": "Whether parties are allowed in the property.", "type": "boolean"}, "security_cameras": {"title": "Security cameras", "description": "Whether the property has security cameras.", "type": "boolean"}}}, "TokenObtainPair": {"required": ["email", "password"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "Availabilities": {"required": ["price_per_unit", "listing_id", "date_available"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "price_per_unit": {"title": "Price per unit", "type": "number", "format": "decimal"}, "listing_id": {"title": "Listing id", "type": "integer"}, "date_available": {"title": "Date available", "description": "Specific date for which the listing is available.", "type": "string", "format": "date"}, "number_available": {"title": "Number available", "description": "Number of identical units available (e.g., rooms, tickets).", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "time_start": {"title": "Time start", "description": "Start time for the availability (optional).", "type": "string", "format": "date-time", "x-nullable": true}, "time_end": {"title": "Time end", "description": "End time for the availability (optional).", "type": "string", "format": "date-time", "x-nullable": true}, "minimum_stay": {"title": "Minimum stay", "description": "Minimum number of nights/days required for booking (primarily for accommodations).", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}}}, "Booking": {"required": ["check_in_date", "check_out_date", "guest_id", "listing_id"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "check_in_date": {"title": "Check in date", "description": "Date and time the guest will check in.", "type": "string", "format": "date-time"}, "check_out_date": {"title": "Check out date", "description": "Date and time the guest will check out.", "type": "string", "format": "date-time"}, "total_cost": {"title": "Total cost", "description": "Total cost of the booking.", "type": "string", "format": "decimal"}, "total_cost_currency": {"title": "Total cost currency", "description": "Currency for the total cost.", "type": "string", "maxLength": 3, "minLength": 1}, "booking_status": {"title": "Booking status", "description": "Current status of the booking.", "type": "string", "enum": ["NotStarted", "DataCollected", "PendingReservation", "ConfirmedReservation", "DeniedReservation", "SuccessfulPayment", "FailedPayment", "CompletedBooking"]}, "special_requests": {"title": "Special requests", "description": "Any special requests made by the guest.", "type": "string"}, "number_of_guests": {"title": "Number of guests", "description": "Number of guests included in the booking.", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "updated_at": {"title": "Updated at", "type": "string", "format": "date-time", "readOnly": true}, "guest_id": {"title": "Guest id", "description": "The guest who made the booking.", "type": "integer"}, "listing_id": {"title": "Listing id", "description": "The property that is booked.", "type": "integer"}}}, "DietaryOptions": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "vegetarian": {"title": "Vegetarian", "description": "Whether vegetarian options are available", "type": "boolean"}, "vegan": {"title": "Vegan", "description": "Whether vegan options are available", "type": "boolean"}, "gluten_free": {"title": "Gluten free", "description": "Whether gluten-free options are available", "type": "boolean"}, "kosher": {"title": "Kosher", "description": "Whether kosher options are available", "type": "boolean"}, "halal": {"title": "Halal", "description": "Whether halal options are available", "type": "boolean"}, "no_dairy": {"title": "No dairy", "description": "Whether dairy-free options are available", "type": "boolean"}, "no_nuts": {"title": "No nuts", "description": "Whether nut-free options are available", "type": "boolean"}, "seafood_free": {"title": "Seafood free", "description": "Whether seafood-free options are available", "type": "boolean"}, "egg_free": {"title": "Egg free", "description": "Whether egg-free options are available", "type": "boolean"}, "soy_free": {"title": "Soy free", "description": "Whether soy-free options are available", "type": "boolean"}, "low_sugar": {"title": "Low sugar", "description": "Whether low sugar options are available", "type": "boolean"}, "no_sugar_added": {"title": "No sugar added", "description": "Whether options with no added sugar are available", "type": "boolean"}, "other": {"title": "Other", "description": "Free text field for other dietary requirements", "type": "string"}}}, "Space": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "guests_capacity": {"title": "Guests capacity", "description": "The maximum number of guests the space can accommodate.", "type": "integer", "maximum": 2147483647, "minimum": 1, "x-nullable": true}, "bathrooms": {"title": "Bathrooms", "description": "Number of bathrooms available in the space.", "type": "integer", "maximum": 2147483647, "minimum": 1, "x-nullable": true}, "bedrooms": {"title": "Bedrooms", "description": "Number of bedrooms available in the space.", "type": "integer", "maximum": 2147483647, "minimum": 1, "x-nullable": true}, "double_beds": {"title": "Double beds", "description": "Number of double beds available in the space.", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "single_beds": {"title": "Single beds", "description": "Number of single beds available in the space.", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}}}, "Location": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "latitude": {"title": "Latitude", "description": "Latitude coordinate of the location.", "type": "number", "x-nullable": true}, "longitude": {"title": "Longitude", "description": "Longitude coordinate of the location.", "type": "number", "x-nullable": true}, "country": {"title": "Country", "description": "Country where the listing is located.", "type": "string", "maxLength": 100, "x-nullable": true}, "city": {"title": "City", "description": "City where the listing is located.", "type": "string", "maxLength": 100, "x-nullable": true}, "street": {"title": "Street", "description": "Street address of the listing.", "type": "string", "maxLength": 255, "x-nullable": true}, "zip": {"title": "Zip", "description": "ZIP or postal code of the listing.", "type": "string", "maxLength": 20, "x-nullable": true}}}, "HouseRules": {"required": ["check_in_time", "check_out_time", "max_guests", "quiet_time"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "check_in_time": {"title": "Check in time", "description": "Check-in time.", "type": "string", "format": "date-time"}, "check_out_time": {"title": "Check out time", "description": "Check-out time.", "type": "string", "format": "date-time"}, "self_check_in": {"title": "Self check in", "description": "Whether self check-in is available.", "type": "boolean"}, "max_guests": {"title": "Max guests", "description": "Maximum number of guests allowed.", "type": "integer", "maximum": 2147483647, "minimum": 1}, "quiet_time": {"title": "Quiet time", "description": "Quiet hours start time.", "type": "string"}, "cancellation_policy": {"title": "Cancellation policy", "description": "Cancellation policy details.", "type": "string", "minLength": 1}, "alcohol_policy": {"title": "Alcohol policy", "description": "Rules regarding alcohol consumption.", "type": "string", "minLength": 1}, "drug_policy": {"title": "Drug policy", "description": "Rules regarding drug consumption.", "type": "string", "minLength": 1}, "pet_policy": {"title": "Pet policy", "description": "Detailed pet policy.", "type": "string", "minLength": 1}}}, "HealthSafety": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "smoke_detectors_installed": {"title": "Smoke detectors installed", "description": "Indicates if smoke detectors are installed in the property.", "type": "boolean"}, "first_aid_kit_available": {"title": "First aid kit available", "description": "Indicates if a first aid kit is available at the property.", "type": "boolean"}, "fire_extinguisher_provided": {"title": "Fire extinguisher provided", "description": "Indicates if a fire extinguisher is available for use.", "type": "boolean"}, "emergency_contact_provided": {"title": "Emergency contact provided", "description": "Indicates if emergency contact information is provided to guests.", "type": "boolean"}, "regular_cleaning_protocols": {"title": "Regular cleaning protocols", "description": "Indicates if the property undergoes regular cleaning protocols to maintain hygiene.", "type": "boolean"}, "covid_19_precautions": {"title": "Covid 19 precautions", "description": "Indicates whether measures against Covid-19 are in place.", "type": "boolean"}}}, "Image": {"type": "object", "properties": {"image": {"title": "Image", "type": "string", "readOnly": true, "format": "uri"}, "uploaded_at": {"title": "Uploaded at", "type": "string", "format": "date-time", "readOnly": true}}}, "Listing": {"required": ["amenities", "space", "location", "host"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "amenities": {"$ref": "#/definitions/Amenity"}, "space": {"$ref": "#/definitions/Space"}, "location": {"$ref": "#/definitions/Location"}, "house_rules": {"$ref": "#/definitions/HouseRules"}, "health_safety": {"$ref": "#/definitions/HealthSafety"}, "accessibility": {"$ref": "#/definitions/Accessibility"}, "availabilities": {"type": "array", "items": {"$ref": "#/definitions/Availabilities"}}, "images": {"type": "array", "items": {"$ref": "#/definitions/Image"}}, "title": {"title": "Title", "description": "Title of the listing", "type": "string", "maxLength": 255, "x-nullable": true}, "description": {"title": "Description", "description": "Detailed description of the listing", "type": "string", "x-nullable": true}, "property_type": {"title": "Property type", "description": "Type of property (e.g., Apartment, House, Cottage)", "type": "string", "maxLength": 100}, "extra": {"title": "Extra", "description": "Additional information about the listing", "type": "string"}, "host": {"title": "Host", "description": "The user who is listing the property.", "type": "integer"}}}, "ListingCreateUpdate": {"required": ["amenities", "space", "location", "host"], "type": "object", "properties": {"title": {"title": "Title", "description": "Title of the listing", "type": "string", "maxLength": 255, "x-nullable": true}, "description": {"title": "Description", "description": "Detailed description of the listing", "type": "string", "x-nullable": true}, "property_type": {"title": "Property type", "description": "Type of property (e.g., Apartment, House, Cottage)", "type": "string", "maxLength": 100}, "extra": {"title": "Extra", "description": "Additional information about the listing", "type": "string"}, "amenities": {"$ref": "#/definitions/Amenity"}, "space": {"$ref": "#/definitions/Space"}, "location": {"$ref": "#/definitions/Location"}, "house_rules": {"$ref": "#/definitions/HouseRules"}, "health_safety": {"$ref": "#/definitions/HealthSafety"}, "accessibility": {"$ref": "#/definitions/Accessibility"}, "host": {"title": "Host", "description": "The user who is listing the property.", "type": "integer"}}}, "Message": {"required": ["sender", "receiver"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "content": {"title": "Content", "description": "The content of the message.", "type": "string", "minLength": 1, "x-nullable": true}, "timestamp": {"title": "Timestamp", "description": "The date and time the message was sent.", "type": "string", "format": "date-time"}, "read_status": {"title": "Read status", "description": "Indicates whether the message has been read by the receiver.", "type": "boolean"}, "sender": {"title": "Sender", "description": "The user who sent the message.", "type": "integer"}, "receiver": {"title": "Receiver", "description": "The user who received the message.", "type": "integer"}, "listing": {"title": "Listing", "description": "The property listing related to the message.", "type": "integer", "x-nullable": true}}}, "Payment": {"required": ["booking_id", "user_id"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "payment_date": {"title": "Payment date", "description": "Date and time when the payment was processed.", "type": "string", "format": "date-time"}, "payment_amount": {"title": "Payment amount", "description": "Amount that was paid.", "type": "string", "format": "decimal"}, "payment_status": {"title": "Payment status", "description": "Current status of the payment.", "type": "string", "enum": ["Unconfirmed", "Charged", "Collected"]}, "stripe_payment_id": {"title": "Stripe payment id", "description": "Stripe's unique identifier for the payment.", "type": "string", "maxLength": 100, "x-nullable": true}, "line_items": {"title": "Line items", "description": "Detailed items that sum up to the total payment.", "type": "object", "x-nullable": true}, "currency": {"title": "Currency", "description": "Currency in which the payment was made.", "type": "string", "maxLength": 3, "minLength": 1}, "booking_id": {"title": "Booking id", "description": "Identifier for the associated booking.", "type": "string", "format": "uuid"}, "user_id": {"title": "User id", "description": "Identifier for the user making the payment.", "type": "integer"}}}, "ScheduleItem": {"required": ["date_start", "date_end"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "date_start": {"title": "Date start", "description": "Start date and time for the activity", "type": "string", "format": "date-time"}, "date_end": {"title": "Date end", "description": "End date and time for the activity, same or later than date_start", "type": "string", "format": "date-time"}, "title": {"title": "Title", "description": "Title of the schedule item", "type": "string", "maxLength": 200}, "description": {"title": "Description", "description": "Detailed description of the activity", "type": "string"}}}, "Retreat": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "program_schedule": {"type": "array", "items": {"$ref": "#/definitions/ScheduleItem"}, "readOnly": true}, "retreat_type": {"title": "Retreat type", "description": "Type of retreat (Yoga, Wellness, Spiritual, etc.)", "type": "string", "maxLength": 100}, "theme": {"title": "Theme", "description": "Overall theme or focus of the retreat", "type": "string", "maxLength": 100}, "silence_policy": {"title": "Silence policy", "description": "Rules regarding silence periods during the retreat", "type": "string"}, "dietary_options": {"title": "Dietary options", "description": "Structured dietary options available for participants", "type": "integer", "x-nullable": true}}}, "TouristActivities": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "activity_type": {"title": "Activity type", "description": "Type of activity (outdoor, adventure, cultural, etc.)", "type": "string", "maxLength": 100}, "difficulty_level": {"title": "Difficulty level", "description": "Difficulty level of the activity", "type": "string", "maxLength": 50, "minLength": 1}, "equipment_provided": {"title": "Equipment provided", "description": "Whether necessary equipment is provided", "type": "boolean"}, "guide_available": {"title": "Guide available", "description": "Whether the activity includes a professional guide", "type": "boolean"}, "minimum_age": {"title": "Minimum age", "description": "Minimum age required to participate", "type": "integer", "maximum": 2147483647, "minimum": 0, "x-nullable": true}, "weather_dependent": {"title": "Weather dependent", "description": "Whether the activity is dependent on weather conditions", "type": "boolean"}}}, "CustomUser": {"required": ["email"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "x-nullable": true}, "is_superuser": {"title": "Superuser status", "description": "Designates that this user has all permissions without explicitly assigning them.", "type": "boolean"}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}, "is_staff": {"title": "Staff status", "description": "Designates whether the user can log into this admin site.", "type": "boolean"}, "is_active": {"title": "Active", "description": "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.", "type": "boolean"}, "date_joined": {"title": "Date joined", "type": "string", "format": "date-time"}, "clerk_id": {"title": "Clerk id", "type": "string", "maxLength": 255, "x-nullable": true}, "profile_picture": {"title": "Profile picture", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "date_of_birth": {"title": "Date of birth", "type": "string", "format": "date", "x-nullable": true}, "street_address": {"title": "Street address", "type": "string", "maxLength": 255, "x-nullable": true}, "city": {"title": "City", "type": "string", "maxLength": 100, "x-nullable": true}, "state": {"title": "State", "type": "string", "maxLength": 100, "x-nullable": true}, "country": {"title": "Country", "type": "string", "maxLength": 100, "x-nullable": true}, "postal_code": {"title": "Postal code", "type": "string", "maxLength": 20, "x-nullable": true}, "social_data": {"title": "Social data", "type": "object", "x-nullable": true}, "external_ids": {"title": "External ids", "type": "object", "x-nullable": true}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 128, "x-nullable": true}, "user_type": {"title": "User type", "type": "string", "enum": ["backend", "customer"]}, "username": {"title": "Username", "type": "string", "maxLength": 150, "x-nullable": true}, "password": {"title": "Password", "type": "string", "maxLength": 128, "x-nullable": true}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "groups": {"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.", "type": "array", "items": {"description": "The groups this user belongs to. A user will get all permissions granted to each of their groups.", "type": "integer"}, "uniqueItems": true}, "user_permissions": {"description": "Specific permissions for this user.", "type": "array", "items": {"description": "Specific permissions for this user.", "type": "integer"}, "uniqueItems": true}}}, "Wishlist": {"required": ["user", "listing"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "added_on": {"title": "Added on", "description": "The date and time when the listing was added to the wishlist.", "type": "string", "format": "date-time"}, "user": {"title": "User", "description": "The user who owns this wishlist.", "type": "integer"}, "listing": {"title": "Listing", "description": "The listing saved to the user's wishlist.", "type": "integer"}}}, "Workshop": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "focus_area": {"title": "Focus area", "description": "Main theme or focus of the workshop", "type": "string", "maxLength": 100}, "skill_level_required": {"title": "Skill level required", "description": "Required skill level", "type": "string", "maxLength": 50, "minLength": 1}, "materials_provided": {"title": "Materials provided", "description": "Whether materials needed for the workshop are provided", "type": "boolean"}, "instructor_credentials": {"title": "Instructor credentials", "description": "Qualifications of the instructor", "type": "string"}, "certification_offered": {"title": "Certification offered", "description": "Whether attendees receive a certification", "type": "boolean"}}}}}